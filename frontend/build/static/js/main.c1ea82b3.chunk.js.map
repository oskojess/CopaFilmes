{"version":3,"sources":["styles/global.js","history.js","components/Header/index.js","services/FilmeService.js","components/Checkbox/index.js","components/Filmes/index.js","pages/Home/index.js","components/Campeoes/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["createGlobalStyle","createBrowserHistory","basename","useStyles","makeStyles","theme","root","margin","padding","background","cardContent","display","flexDirection","justifyContent","alignItems","titulo","fontWeight","color","boldWhite","bold","Header","subtitulo","descricao","classes","Card","className","CardContent","Typography","component","variant","Divider","api","axios","create","baseURL","options","method","headers","rodarCampeonato","filmes","a","post","response","data","console","log","getFilmes","get","sort","b","SelecionarFilmes","type","onChange","tabIndex","checked","Checkbox","size","disableRipple","card","grid","flexGrow","maxWidth","box","marginTop","upper","textTransform","selecionados","ListaFilmes","useState","setFilmes","filmesSelecionados","setSelecionados","history","useHistory","useEffect","fetchDados","Box","gutterBottom","length","Button","onClick","push","Grid","container","spacing","map","filme","key","id","item","xs","sm","ano","novosFilmes","filtrarFilmes","filter","handleSelecionarFilmes","Home","Container","Filmes","Campeoes","setCampeoes","campeoes","fetchCampeonato","Routes","exact","path","from","to","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c1ea82b3.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  *{\n    margin: 0; \n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n  body{\n    font-family: Arial, Helvetica, sans-serif;\n    background: #DADADA;\n    text-rendering: optimizeLegibility;\n    -webkit-font-smoothing: antialiased; \n  }\n  html, body, #root{\n    height: 100%;\n  }\n`;","import { createBrowserHistory } from 'history'\nexport default createBrowserHistory({ basename: '/' })\n","import React from 'react';\nimport { Card, Typography, Divider, CardContent } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst Header = ({ titulo, subtitulo, descricao }) => {\n\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent className={classes.cardContent}>\n        <Typography component=\"h2\" color=\"textSecondary\" className={classes.bold}>{titulo}</Typography>\n        <Typography variant=\"h4\" component=\"h1\" className={classes.boldWhite}> {subtitulo}</Typography>\n        <Divider variant=\"middle\" />\n        <Typography component=\"h3\" className={classes.boldWhite}>{descricao}</Typography>\n      </CardContent>\n    </Card>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"40px 0px\",\n    padding: 40,\n    background: \"#939191\"\n  },\n  cardContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  titulo: {\n    fontWeight: \"bold\",\n    color: \"#F5F5F5\",\n  },\n  boldWhite: {\n    color: \"#FFF\",\n    fontWeight: \"bold\",\n  },\n  bold: {\n    fontWeight: \"bold\"\n  }\n}));\n\nexport default Header; \n","import axios from 'axios'\n\nconst api = axios.create({ baseURL: \"https://localhost:5001/filme/api\" })\n\nconst options = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json;charset=UTF-8',\n    'Accept': 'application/json',\n  },\n};\n\nexport async function rodarCampeonato(filmes) {\n  try {\n    const response = await api.post('/campeonato', filmes, options);\n    const { data } = response;\n    console.log('response', response)\n    return data;\n  }\n  catch (err) {\n    console.log(err)\n  }\n};\n\nexport async function getFilmes() {\n  try {\n    const response = await api.get('/filmes');\n    const { data } = response;\n    data.sort((a, b) => (a.titulo > b.titulo) ? 1 : -1)\n    return data;\n  }\n  catch (err) {\n    console.log(err)\n  }\n};","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nconst SelecionarFilmes = ({ type = \"checkbox\", titulo, onChange, tabIndex, checked }) => {\n\n  return (\n    <Checkbox\n      type={type}\n      titulo={titulo}\n      onChange={onChange}\n      checked={checked}\n      tabIndex={tabIndex}\n      color=\"default\"\n      size=\"medium\"\n      disableRipple\n    />\n  );\n};\n\nexport default SelecionarFilmes; \n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { getFilmes } from '../../services/FilmeService';\n\nimport { Box, Button, Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { rodarCampeonato } from '../../services/FilmeService';\nimport Checkbox from '../Checkbox/';\n\n\nconst ListaFilmes = () => {\n  const [filmes, setFilmes] = useState([]);\n  const [filmesSelecionados, setSelecionados] = useState([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    const fetchDados = async () => {\n      const filmes = await getFilmes();\n      setFilmes(filmes);\n    };\n    fetchDados();\n  }, []);\n\n\n  function handleSelecionarFilmes(id) {\n    const novosFilmes = filmes.map((filme) => {\n      return filme.id === id ? { ...filme, checked: !filme.checked } : filme;\n    });\n\n    const filtrarFilmes = novosFilmes.filter((item) => {\n      return item.checked === true;\n    });\n\n    setFilmes(novosFilmes);\n    setSelecionados([...filtrarFilmes]);\n  }\n\n  function handleClick() {\n    rodarCampeonato(filmesSelecionados);\n    history.push(\"/campeoes\");\n  }\n\n  const classes = useStyles();\n\n  return (\n\n    <>\n      <Box component=\"span\" className={classes.box}>\n        <Box component=\"span\">\n          <Typography component=\"h3\" className={classes.selecionados}>Selecionados: </Typography>\n          <Typography color=\"textSecondary\" gutterBottom>{filmesSelecionados.length} de 8</Typography>\n        </Box>\n        <Button variant=\"contained\" className={classes.upper} onClick={() => handleClick()}>Gerar meu campeonato</Button>\n      </Box>\n\n      <div className={classes.root}>\n        <Grid container spacing={1} className={classes.card}>\n          {filmes.map(filme =>\n            <Grid key={filme.id}\n              item xs={6}\n              sm={3}\n              className={classes.grid}>\n              <Box component=\"span\">\n                <Typography component=\"p\"> {filme.titulo}</Typography>\n                <Typography color=\"textSecondary\" gutterBottom> {filme.ano}</Typography>\n              </Box>\n              <Box component=\"span\">\n                <Checkbox\n                  titulo={filme.titulo}\n                  onChange={() => handleSelecionarFilmes(filme.id)}\n                />\n              </Box>\n            </Grid>\n          )}\n        </Grid>\n      </div>\n    </>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 8,\n  },\n  card: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  grid: {\n    display: \"flex\",\n    flexGrow: 1,\n    justifyContent: \"flex-end\",\n    flexDirection: \"row-reverse\",\n    alignItems: \"center\",\n    margin: 8,\n    maxWidth: \"250px\",\n    background: \"#FFF\"\n  },\n\n  box: {\n    marginTop: 10,\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  upper: {\n    textTransform: \"upper\"\n  },\n  selecionados: {\n    color: \"#FFF\",\n    fontWeight: \"bold\"\n  }\n}));\n\nexport default ListaFilmes;\n","import React from 'react';\n\nimport Container from '@material-ui/core/Container';\n\nimport Header from '../../components/Header/'\nimport Filmes from '../../components/Filmes';\n\nconst Home = () => (\n  <Container>\n    <Header\n      titulo=\"Campeonato de Filmes\"\n      subtitulo=\"Fase Seleção\"\n      descricao=\"Selecione 8 filmes que você deseja que entrem na competição e depois pressione o botão gerar Meu Campeonato para prosseguir.\"\n    />\n    <Filmes />\n  </Container>\n)\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Header from '../Header/';\n\nimport { rodarCampeonato } from '../../services/FilmeService'\n\nconst Campeoes = () => {\n\n  const [campeoes, setCampeoes] = useState([]);\n\n  useEffect(() => {\n    const fetchCampeonato = async () => {\n      const campeoes = await rodarCampeonato();\n      console.log(\"campe-\", campeoes)\n      setCampeoes(campeoes);\n    };\n    fetchCampeonato();\n  }, []);\n\n\n  return (\n    <Container>\n      <Header\n        titulo=\"Campeonato de Filmes\"\n        subtitulo=\"Resultado Final\"\n        descricao=\"Veja o resultado final do Campeonato de Filmes de forma simples e rápida\"\n      />\n\n\n    </Container>\n  )\n}\n\nexport default Campeoes;\n","import React from 'react';\n\nimport { Route, Redirect } from 'react-router';\n\nimport { Router, Switch } from 'react-router-dom';\n\nimport history from './history';\n\nimport Home from './pages/Home';\nimport Campeoes from './components/Campeoes';\n\n\nconst Routes = () => {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/campeoes\" component={Campeoes} />\n        <Redirect from='*' to='/' />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default Routes;","import React from 'react';\n\nimport GlobalStyle from './styles/global';\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <>\n      <Routes />\n      <GlobalStyle />\n\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}