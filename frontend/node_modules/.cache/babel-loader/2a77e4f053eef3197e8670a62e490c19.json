{"ast":null,"code":"var _jsxFileName = \"/Users/retsuko/Documents/CopaFilmes/frontend/src/components/Filmes/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { obterFilmes } from '../../services/FilmeService';\nimport { Box, Button, Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { rodarCampeonato } from '../../services/FilmeService';\nimport Checkbox from '../Checkbox/';\n\nconst ListaFilmes = () => {\n  const [filmes, setFilmes] = useState([]);\n  const [filmesSelecionados, setSelecionados] = useState([]);\n  let history = useHistory();\n  useEffect(() => {\n    const fetchDados = async () => {\n      const resultado = await obterFilmes();\n      setFilmes(resultado);\n    };\n\n    fetchDados();\n  }, []);\n\n  function handleSelecionarFilmes(id) {\n    const novosFilmes = filmes.map(filme => {\n      return filme.id === id ? { ...filme,\n        checked: !filme.checked\n      } : filme;\n    });\n    const filtrarFilmes = novosFilmes.filter(item => {\n      return item.checked === true;\n    });\n    setFilmes(novosFilmes);\n    setSelecionados([...filtrarFilmes]);\n  }\n\n  async function handleClick() {\n    const campeoes = await rodarCampeonato(filmesSelecionados);\n    history.push(\"/campeoes\", campeoes);\n  }\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    component: \"span\",\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h3\",\n    className: classes.selecionados,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Selecionados: \"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, filmesSelecionados.length, \" de 8\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.upper,\n    onClick: () => handleClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Gerar meu campeonato\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, filmes.map(filme => /*#__PURE__*/React.createElement(Grid, {\n    key: filme.id,\n    item: true,\n    xs: 6,\n    sm: 3,\n    className: classes.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \" \", filme.titulo), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \" \", filme.ano)), /*#__PURE__*/React.createElement(Box, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    titulo: filme.titulo,\n    onChange: () => handleSelecionarFilmes(filme.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: 8\n  },\n  card: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  grid: {\n    display: \"flex\",\n    flexGrow: 1,\n    justifyContent: \"flex-end\",\n    flexDirection: \"row-reverse\",\n    alignItems: \"center\",\n    margin: 8,\n    maxWidth: \"250px\",\n    background: \"#FFF\"\n  },\n  box: {\n    marginTop: 10,\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  upper: {\n    textTransform: \"upper\"\n  },\n  selecionados: {\n    color: \"#FFF\",\n    fontWeight: \"bold\"\n  }\n}));\nexport default ListaFilmes;","map":{"version":3,"sources":["/Users/retsuko/Documents/CopaFilmes/frontend/src/components/Filmes/index.js"],"names":["React","useState","useEffect","useHistory","obterFilmes","Box","Button","Grid","Typography","makeStyles","rodarCampeonato","Checkbox","ListaFilmes","filmes","setFilmes","filmesSelecionados","setSelecionados","history","fetchDados","resultado","handleSelecionarFilmes","id","novosFilmes","map","filme","checked","filtrarFilmes","filter","item","handleClick","campeoes","push","classes","useStyles","box","selecionados","length","upper","root","card","grid","titulo","ano","theme","margin","display","justifyContent","flexGrow","flexDirection","alignItems","maxWidth","background","marginTop","textTransform","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { obterFilmes } from '../../services/FilmeService';\n\nimport { Box, Button, Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { rodarCampeonato } from '../../services/FilmeService';\nimport Checkbox from '../Checkbox/';\n\n\nconst ListaFilmes = () => {\n  const [filmes, setFilmes] = useState([]);\n  const [filmesSelecionados, setSelecionados] = useState([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    const fetchDados = async () => {\n      const resultado = await obterFilmes();\n      setFilmes(resultado);\n    };\n    fetchDados();\n  }, []);\n\n\n  function handleSelecionarFilmes(id) {\n    const novosFilmes = filmes.map((filme) => {\n      return filme.id === id ? { ...filme, checked: !filme.checked } : filme;\n    });\n\n    const filtrarFilmes = novosFilmes.filter((item) => {\n      return item.checked === true;\n    });\n\n    setFilmes(novosFilmes);\n    setSelecionados([...filtrarFilmes]);\n  }\n\n  async function handleClick() {\n    const campeoes = await rodarCampeonato(filmesSelecionados);\n    history.push(\"/campeoes\", campeoes);\n  }\n\n  const classes = useStyles();\n\n  return (\n\n    <>\n      <Box component=\"span\" className={classes.box}>\n        <Box component=\"span\">\n          <Typography component=\"h3\" className={classes.selecionados}>Selecionados: </Typography>\n          <Typography color=\"textSecondary\" gutterBottom>{filmesSelecionados.length} de 8</Typography>\n        </Box>\n        <Button variant=\"contained\" className={classes.upper} onClick={() => handleClick()}>Gerar meu campeonato</Button>\n      </Box>\n\n      <div className={classes.root}>\n        <Grid container spacing={1} className={classes.card}>\n          {filmes.map(filme =>\n            <Grid key={filme.id}\n              item xs={6}\n              sm={3}\n              className={classes.grid}>\n              <Box component=\"span\">\n                <Typography component=\"p\"> {filme.titulo}</Typography>\n                <Typography color=\"textSecondary\" gutterBottom> {filme.ano}</Typography>\n              </Box>\n              <Box component=\"span\">\n                <Checkbox\n                  titulo={filme.titulo}\n                  onChange={() => handleSelecionarFilmes(filme.id)}\n                />\n              </Box>\n            </Grid>\n          )}\n        </Grid>\n      </div>\n    </>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 8,\n  },\n  card: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  grid: {\n    display: \"flex\",\n    flexGrow: 1,\n    justifyContent: \"flex-end\",\n    flexDirection: \"row-reverse\",\n    alignItems: \"center\",\n    margin: 8,\n    maxWidth: \"250px\",\n    background: \"#FFF\"\n  },\n  box: {\n    marginTop: 10,\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  upper: {\n    textTransform: \"upper\"\n  },\n  selecionados: {\n    color: \"#FFF\",\n    fontWeight: \"bold\"\n  }\n}));\n\nexport default ListaFilmes;\n"]},"metadata":{},"sourceType":"module"}