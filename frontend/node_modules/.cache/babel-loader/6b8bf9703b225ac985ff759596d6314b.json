{"ast":null,"code":"import _toConsumableArray from\"/Users/retsuko/Documents/CopaFilmes/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/retsuko/Documents/CopaFilmes/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/retsuko/Documents/CopaFilmes/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/retsuko/Documents/CopaFilmes/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/retsuko/Documents/CopaFilmes/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useHistory}from\"react-router-dom\";import{getFilmes}from'../../services/FilmeService';import{Box,Button,Grid,Typography}from'@material-ui/core';import{makeStyles}from'@material-ui/core/styles';import{rodarCampeonato}from'../../services/FilmeService';import Checkbox from'../Checkbox/';var ListaFilmes=function ListaFilmes(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),filmes=_useState2[0],setFilmes=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),filmesSelecionados=_useState4[0],setSelecionados=_useState4[1];var history=useHistory();useEffect(function(){var fetchDados=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var filmes;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getFilmes();case 2:filmes=_context.sent;setFilmes(filmes);case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchDados(){return _ref.apply(this,arguments);};}();fetchDados();},[]);function handleSelecionarFilmes(id){var novosFilmes=filmes.map(function(filme){return filme.id===id?_objectSpread({},filme,{checked:!filme.checked}):filme;});var filtrarFilmes=novosFilmes.filter(function(item){return item.checked===true;});setFilmes(novosFilmes);setSelecionados(_toConsumableArray(filtrarFilmes));}function handleClick(){rodarCampeonato(filmesSelecionados);history.push(\"/campeoes\");}var classes=useStyles();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Box,{component:\"span\",className:classes.box},/*#__PURE__*/React.createElement(Box,{component:\"span\"},/*#__PURE__*/React.createElement(Typography,{component:\"h3\",className:classes.selecionados},\"Selecionados: \"),/*#__PURE__*/React.createElement(Typography,{color:\"textSecondary\",gutterBottom:true},filmesSelecionados.length,\" de 8\")),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",className:classes.upper,onClick:function onClick(){return handleClick();}},\"Gerar meu campeonato\")),/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:1,className:classes.card},filmes.map(function(filme){return/*#__PURE__*/React.createElement(Grid,{key:filme.id,item:true,xs:6,sm:3,className:classes.grid},/*#__PURE__*/React.createElement(Box,{component:\"span\"},/*#__PURE__*/React.createElement(Typography,{component:\"p\"},\" \",filme.titulo),/*#__PURE__*/React.createElement(Typography,{color:\"textSecondary\",gutterBottom:true},\" \",filme.ano)),/*#__PURE__*/React.createElement(Box,{component:\"span\"},/*#__PURE__*/React.createElement(Checkbox,{titulo:filme.titulo,onChange:function onChange(){return handleSelecionarFilmes(filme.id);}})));}))));};var useStyles=makeStyles(function(theme){return{root:{margin:8},card:{display:\"flex\",justifyContent:\"center\"},grid:{display:\"flex\",flexGrow:1,justifyContent:\"flex-end\",flexDirection:\"row-reverse\",alignItems:\"center\",margin:8,maxWidth:\"250px\",background:\"#FFF\"},box:{marginTop:10,display:\"flex\",justifyContent:\"space-between\"},upper:{textTransform:\"upper\"},selecionados:{color:\"#FFF\",fontWeight:\"bold\"}};});export default ListaFilmes;","map":{"version":3,"sources":["/Users/retsuko/Documents/CopaFilmes/frontend/src/components/Filmes/index.js"],"names":["React","useState","useEffect","useHistory","getFilmes","Box","Button","Grid","Typography","makeStyles","rodarCampeonato","Checkbox","ListaFilmes","filmes","setFilmes","filmesSelecionados","setSelecionados","history","fetchDados","handleSelecionarFilmes","id","novosFilmes","map","filme","checked","filtrarFilmes","filter","item","handleClick","push","classes","useStyles","box","selecionados","length","upper","root","card","grid","titulo","ano","theme","margin","display","justifyContent","flexGrow","flexDirection","alignItems","maxWidth","background","marginTop","textTransform","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { getFilmes } from '../../services/FilmeService';\n\nimport { Box, Button, Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { rodarCampeonato } from '../../services/FilmeService';\nimport Checkbox from '../Checkbox/';\n\n\nconst ListaFilmes = () => {\n  const [filmes, setFilmes] = useState([]);\n  const [filmesSelecionados, setSelecionados] = useState([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    const fetchDados = async () => {\n      const filmes = await getFilmes();\n      setFilmes(filmes);\n    };\n    fetchDados();\n  }, []);\n\n\n  function handleSelecionarFilmes(id) {\n    const novosFilmes = filmes.map((filme) => {\n      return filme.id === id ? { ...filme, checked: !filme.checked } : filme;\n    });\n\n    const filtrarFilmes = novosFilmes.filter((item) => {\n      return item.checked === true;\n    });\n\n    setFilmes(novosFilmes);\n    setSelecionados([...filtrarFilmes]);\n  }\n\n  function handleClick() {\n    rodarCampeonato(filmesSelecionados);\n    history.push(\"/campeoes\");\n  }\n\n  const classes = useStyles();\n\n  return (\n\n    <>\n      <Box component=\"span\" className={classes.box}>\n        <Box component=\"span\">\n          <Typography component=\"h3\" className={classes.selecionados}>Selecionados: </Typography>\n          <Typography color=\"textSecondary\" gutterBottom>{filmesSelecionados.length} de 8</Typography>\n        </Box>\n        <Button variant=\"contained\" className={classes.upper} onClick={() => handleClick()}>Gerar meu campeonato</Button>\n      </Box>\n\n      <div className={classes.root}>\n        <Grid container spacing={1} className={classes.card}>\n          {filmes.map(filme =>\n            <Grid key={filme.id}\n              item xs={6}\n              sm={3}\n              className={classes.grid}>\n              <Box component=\"span\">\n                <Typography component=\"p\"> {filme.titulo}</Typography>\n                <Typography color=\"textSecondary\" gutterBottom> {filme.ano}</Typography>\n              </Box>\n              <Box component=\"span\">\n                <Checkbox\n                  titulo={filme.titulo}\n                  onChange={() => handleSelecionarFilmes(filme.id)}\n                />\n              </Box>\n            </Grid>\n          )}\n        </Grid>\n      </div>\n    </>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 8,\n  },\n  card: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  grid: {\n    display: \"flex\",\n    flexGrow: 1,\n    justifyContent: \"flex-end\",\n    flexDirection: \"row-reverse\",\n    alignItems: \"center\",\n    margin: 8,\n    maxWidth: \"250px\",\n    background: \"#FFF\"\n  },\n\n  box: {\n    marginTop: 10,\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  upper: {\n    textTransform: \"upper\"\n  },\n  selecionados: {\n    color: \"#FFF\",\n    fontWeight: \"bold\"\n  }\n}));\n\nexport default ListaFilmes;\n"]},"metadata":{},"sourceType":"module"}